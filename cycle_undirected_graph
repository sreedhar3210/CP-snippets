//checks if there exists cycle in undirected graph

const int N=5e5+10;
map<int,vector<int>>adj;
vector<bool>c(N,false);

bool loop_dfs(int x,int prev)
{
    for(auto it : adj[x])
    {
        if(!c[it])
        {
            c[it]=true;
            if(loop_dfs(it,x))        return true;
        }
        else if(it!=prev)        return true;
    }
    return false;
}

bool check_loop(int n)
{
    for(int i=1;i<=n;i++)
    {
        if(!c[i])
        {
            c[i]=true;
            if(loop_dfs(i,-1))        return true;
        }
    }
    return false;
}
